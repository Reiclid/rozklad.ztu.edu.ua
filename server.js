const express = require("express");
const cors = require("cors");
const axios = require("axios");
const path = require("path");
const session = require("express-session");
const cookieParser = require("cookie-parser");

const app = express();
const PORT = process.env.PORT || 8080;

// üîπ –§—ñ–∫—Å CORS –Ω–∞ Koyeb
app.use((req, res, next) => {
    res.header("Access-Control-Allow-Origin", req.headers.origin || "*");
    res.header("Access-Control-Allow-Credentials", "true");
    res.header("Access-Control-Allow-Methods", "GET,HEAD,OPTIONS,POST,PUT");
    res.header("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept, Authorization");
    if (req.method === "OPTIONS") return res.sendStatus(204);
    next();
});

app.use(express.json());
app.use(cookieParser());
app.use(session({
    secret: "your-secret-key",
    resave: false,
    saveUninitialized: false,
    cookie: {
        secure: process.env.NODE_ENV === "production",
        httpOnly: true,
        sameSite: "lax"
    }
}));

// üìå –ü—Ä–æ–∫—Å—ñ –¥–ª—è API
app.get("/proxy", async (req, res) => {
    const targetUrl = req.query.url;
    if (!targetUrl) return res.status(400).send("‚ùå –ü–æ–º–∏–ª–∫–∞: URL –Ω–µ –≤–∫–∞–∑–∞–Ω–æ!");

    try {
        const response = await axios.get(targetUrl, {
            headers: { "User-Agent": req.headers["user-agent"], "Cookie": req.headers.cookie },
            withCredentials: true
        });

        res.set({
            "Access-Control-Allow-Origin": req.headers.origin || "*",
            "Access-Control-Allow-Credentials": "true"
        });

        res.send(response.data);
    } catch (error) {
        console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö:", error.message);
        res.status(500).send("‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ " + targetUrl);
    }
});

// üìå –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è
app.get("/api/login", async (req, res) => {
    try {
        console.log("üì° –û—Ç—Ä–∏–º–∞–Ω—ñ –∫—É–∫—ñ –∑ –±—Ä–∞—É–∑–µ—Ä–∞:", req.headers.cookie);

        const response = await axios.get("https://cabinet.ztu.edu.ua/site/schedule", {
            headers: { "User-Agent": req.headers["user-agent"], "Cookie": req.headers.cookie }
        });

        if (response.data.includes('<a href="/site/login">–£–≤—ñ–π—Ç–∏</a>')) {
            console.warn("‚ö†Ô∏è –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π");
            return res.status(401).json({ success: false, error: "–ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å –≤ –∫–∞–±—ñ–Ω–µ—Ç—ñ –ñ–î–£" });
        }

        console.log("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞!");
        req.session.authCookies = req.headers.cookie;
        res.json({ success: true, message: "–ê–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞", schedule: response.data });
    } catch (error) {
        console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó:", error.message);
        res.status(500).json({ error: "–ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ —Å–ø—Ä–æ–±—ñ –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó" });
    }
});

// üìå –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–æ–∑–∫–ª–∞–¥—É
app.get("/api/schedule", async (req, res) => {
    if (!req.session.authCookies) return res.status(401).json({ error: "‚ùå –ù–µ–º–∞—î –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö –∫—É–∫—ñ. –ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—è!" });

    try {
        const response = await axios.get(`https://cabinet.ztu.edu.ua/site/schedule`, {
            headers: { "User-Agent": req.headers["user-agent"], "Cookie": req.session.authCookies },
            withCredentials: true
        });

        if (response.data.includes('<a href="/site/login">–£–≤—ñ–π—Ç–∏</a>')) {
            console.warn("‚ö† –°–µ—Ä–≤–µ—Ä –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏–≤ –Ω–∞ –ª–æ–≥—ñ–Ω.");
            return res.status(401).json({ error: "‚ùå –í–∏ –Ω–µ –∑–∞–ª–æ–≥—ñ–Ω–µ–Ω—ñ!" });
        }

        res.send(response.data);
    } catch (error) {
        console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–æ–∑–∫–ª–∞–¥—É:", error.message);
        res.status(500).json({ error: "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ä–æ–∑–∫–ª–∞–¥" });
    }
});

app.listen(PORT, () => console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –ø—Ä–∞—Ü—é—î –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`));
